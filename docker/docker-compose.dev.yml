version: '3.7'

services:
  db:
    image: postgres:12.3-alpine
    container_name: doo-db-dev
    restart: unless-stopped
    networks:
      - doo-dev-network
    volumes:
      - ./.docker/data/postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: doo-user
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: doo-wallet-db

  redis:
    image: redis:6.2.4-alpine
    container_name: doo-redis-dev
    restart: unless-stopped
    networks:
      - doo-dev-network
    volumes:
      - ./.docker/data/redis:/data
    ports:
      - 6379:6379
    # command: redis-server --requirepass ${REDIS_PASSWORD}

  zoo:
    image: zookeeper:3.4.9
    hostname: zoo
    ports:
      - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zoo:2888:3888
    volumes:
      - ./.docker/kafka/zoo/data:/data
      - ./.docker/kafka/zoo/datalog:/datalog
  kafka1:
    image: confluentinc/cp-kafka:5.3.0
    hostname: kafka1
    ports:
      - "9091:9091"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19091,LISTENER_DOCKER_EXTERNAL://127.0.0.1:9091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      JMX_PORT: 9997
    volumes:
      - ./.docker/kafka/kafka1/data:/var/lib/kafka/data
    depends_on:
      - zoo
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 9000:8080
    depends_on:
      - zoo
      - kafka1
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:19091
      KAFKA_CLUSTERS_0_ZOOKEEPER: zoo:2181
      KAFKA_CLUSTERS_0_JMXPORT: 9997
      SERVER_SERVLET_CONTEXT_PATH: /kafkaui
      AUTH_TYPE: "LOGIN_FORM"
      SPRING_SECURITY_USER_NAME: admin
      SPRING_SECURITY_USER_PASSWORD: pass


volumes:
  .docker:


networks:
  doo-dev-network:
    driver: bridge
